
Traceback (most recent call last):
File "/var/task/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
File "/var/task/sqlalchemy/engine/default.py", line 945, in do_execute
    cursor.execute(statement, parameters)
sqlite3.OperationalError: attempt to write a readonly database
The above exception was the direct cause of the following exception:
Traceback (most recent call last):
File "/var/task/flask/app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/var/task/flask/app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/var/task/flask/app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
File "/var/task/flask/app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/var/task/flask_login/utils.py", line 290, in decorated_view
    return current_app.ensure_sync(func)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/var/task/test_routes.py", line 1379, in request_retry
    db.session.commit()
File "/var/task/sqlalchemy/orm/scoping.py", line 599, in commit
    return self._proxied.commit()
           ^^^^^^^^^^^^^^^^^^^^^^
File "/var/task/sqlalchemy/orm/session.py", line 2032, in commit
    trans.commit(_to_root=True)
File "<string>", line 2, in commit
File "/var/task/sqlalchemy/orm/state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
File "/var/task/sqlalchemy/orm/session.py", line 1313, in commit
    self._prepare_impl()
File "<string>", line 2, in _prepare_impl
File "/var/task/sqlalchemy/orm/state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
File "/var/task/sqlalchemy/orm/session.py", line 1288, in _prepare_impl
    self.session.flush()
File "/var/task/sqlalchemy/orm/session.py", line 4353, in flush
    self._flush(objects)
File "/var/task/sqlalchemy/orm/session.py", line 4488, in _flush
    with util.safe_reraise():
         ^^^^^^^^^^^^^^^^^^^
File "/var/task/sqlalchemy/util/langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
File "/var/task/sqlalchemy/orm/session.py", line 4449, in _flush
    flush_context.execute()
File "/var/task/sqlalchemy/orm/unitofwork.py", line 466, in execute
    rec.execute(self)
File "/var/task/sqlalchemy/orm/unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
File "/var/task/sqlalchemy/orm/persistence.py", line 93, in save_obj
    _emit_insert_statements(
File "/var/task/sqlalchemy/orm/persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
             ^^^^^^^^^^^^^^^^^^^
File "/var/task/sqlalchemy/engine/base.py", line 1416, in execute
    return meth(
           ^^^^^
File "/var/task/sqlalchemy/sql/elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/var/task/sqlalchemy/engine/base.py", line 1638, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
File "/var/task/sqlalchemy/engine/base.py", line 1843, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/var/task/sqlalchemy/engine/base.py", line 1983, in _exec_single_context
    self._handle_dbapi_exception(
File "/var/task/sqlalchemy/engine/base.py", line 2352, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
File "/var/task/sqlalchemy/engine/base.py", line 1964, in _exec_single_context
    self.dialect.do_execute(
File "/var/task/sqlalchemy/engine/default.py", line 945, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) attempt to write a readonly database
[SQL: INSERT INTO test_retry_requests (test_id, user_id, request_date, status, reason, admin_response, response_date, responded_by) VALUES (?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: (2, 6, '2025-04-07 21:26:11.500604', 'pending', 'بيلبيبليبي', None, None, None)]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
500 Internal server error: 500 Internal Server Error: The server encountered an internal error and was unable to complete your request. Either the server is overloaded or there is an error in the application.
hon.py", line 288, in handle_request
response = app(env, start_response)
^^^^^^^^^^^^^^^^^^^^^^^^
File "/var/task/flask/app.py", line 1536, in __call__
return self.wsgi_app(environ, start_response)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/var/task/flask/app.py", line 1514, in wsgi_app
response = self.handle_exception(e)
^^^^^^^^^^^^^^^^^^^^^^^^
File "/var/task/flask/app.py", line 860, in handle_exception
server_error = self.ensure_sync(handler)(server_error)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/var/task/main.py", line 38, in internal_server_error
return render_template('500.html'), 500
^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/var/task/flask/templating.py", line 150, in render_template
return _render(app, template, context)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/var/task/flask/templating.py", line 131, in _render
rv = template.render(context)
^^^^^^^^^^^^^^^^^^^^^^^^
File "/var/task/jinja2/environment.py", line 1295, in render
self.environment.handle_exception()
File "/var/task/jinja2/environment.py", line 942, in handle_exception
raise rewrite_traceback_stack(source=source)
File "/var/task/templates/500.html", line 1, in top-level template code
{% extends 'base.html' %}
File "/var/task/templates/base.html", line 106, in top-level template code
{% if current_user.role == 'admin' %}
^^^^^^^^^^^^^^^^^^^^^^^^^
File "/var/task/jinja2/environment.py", line 490, in getattr
return getattr(obj, attribute)
^^^^^^^^^^^^^^^^^^^^^^^
File "/var/task/sqlalchemy/orm/attributes.py", line 566, in __get__
return self.impl.get(state, dict_)  # type: ignore[no-any-return]
^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/var/task/sqlalchemy/orm/attributes.py", line 1086, in get
value = self._fire_loader_callables(state, key, passive)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/var/task/sqlalchemy/orm/attributes.py", line 1116, in _fire_loader_callables
return state._load_expired(state, passive)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/var/task/sqlalchemy/orm/state.py", line 803, in _load_expired
self.manager.expired_attribute_loader(self, toload, passive)
File "/var/task/sqlalchemy/orm/loading.py", line 1670, in load_scalar_attributes
result = load_on_ident(
^^^^^^^^^^^^^^
File "/var/task/sqlalchemy/orm/loading.py", line 509, in load_on_ident
return load_on_pk_identity(
^^^^^^^^^^^^^^^^^^^^
File "/var/task/sqlalchemy/orm/loading.py", line 694, in load_on_pk_identity
session.execute(
File "/var/task/sqlalchemy/orm/session.py", line 2365, in execute
return self._execute_internal(
^^^^^^^^^^^^^^^^^^^^^^^
File "/var/task/sqlalchemy/orm/session.py", line 2241, in _execute_internal
conn = self._connection_for_bind(bind)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/var/task/sqlalchemy/orm/session.py", line 2110, in _connection_for_bind
return trans._connection_for_bind(engine, execution_options)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "<string>", line 2, in _connection_for_bind
File "/var/task/sqlalchemy/orm/state_changes.py", line 103, in _go
self._raise_for_prerequisite_state(fn.__name__, current_state)
File "/var/task/sqlalchemy/orm/session.py", line 973, in _raise_for_prerequisite_state
raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.OperationalError) attempt to write a readonly database
[SQL: INSERT INTO test_retry_requests (test_id, user_id, request_date, status, reason, admin_response, response_date, responded_by) VALUES (?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: (2, 6, '2025-04-07 21:26:11.500604', 'pending', 'بيلبيبليبي', None, None, None)]
(Background on this error at: https://sqlalche.me/e/20/e3q8) (Background on this error at: https://sqlalche.me/e/20/7s2a)
----------------------------------------